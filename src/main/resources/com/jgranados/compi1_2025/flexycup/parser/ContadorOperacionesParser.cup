package com.jgranados.compi1_2025.flexycup.parser;

import java_cup.runtime.*;
import com.jgranados.compi1_2025.ContadorOperaciones;
import com.jgranados.compi1_2025.flexycup.lexer.ContadorOperacionesLexer;


parser code {:
    // Connect this parser to a scanner!
    public ContadorOperacionesParser(ContadorOperacionesLexer lex) {
	    super(lex);
	  }

private ContadorOperaciones contador = new ContadorOperaciones();

public ContadorOperaciones getContador() {
    return contador;
}

public void syntax_error(Symbol cur_token) {
            System.out.println("Simbolo con error:" + symbl_name_from_id(cur_token.sym));
            System.out.println("Linea " + cur_token.left);
            System.out.println("Columna " + cur_token.right);
            if (expected_token_ids().isEmpty()) {
                System.out.println("ya no se esperaba ningun simbolo");
            }
        }

public void unrecovered_syntax_error(Symbol cur_token) {
            System.out.println("Error irrecuperable sobrecargado");
        }
:}

/* Terminals (tokens returned by the scanner). */
terminal            P_COMA, SUMA, RESTA, DIVISION, MULTIPLICACION;
terminal Integer    ENTERO;

/* Non-terminals */
non terminal                        operacion;
non terminal                        simbolo;
non terminal                        operaciones;


/* The grammar */


start with operaciones;

operaciones ::= operacion P_COMA operaciones        
                | operacion                         
                ;

operacion   ::= ENTERO simbolo ENTERO
                | error                             {: System.out.println("Aqui hay un error");:}
                ;

simbolo     ::= SUMA                                {: System.out.println("Se econtro una suma");  contador.incrementarSumas(); :}
                | RESTA                             {: contador.incrementarRestas(); :}
                | DIVISION                          {: contador.incrementarDiv(); :}
                | MULTIPLICACION                    {: System.out.println("Se econtro una multi"); contador.incrementarMult(); :}
                ;



/*
operaciones -> operacion ; operaciones
            | operacion

operacion -> ENTERO simbolo ENTERO

simbolo -> SUMA
        | RESTA
        | DIVISION
        | MULTIPLICACION

*/
